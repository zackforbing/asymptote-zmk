/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

&mt {
    tapping-term-ms = <250>;
    flavor = "tap-preferred";
};

&lt { quick-tap-ms = <300>; };

&soft_off {
    hold-time-ms = <5000>;
};

/ {
    combos {
        compatible = "zmk,combos";

        left_enter {
            bindings = <&kp ENTER>;
            key-positions = <12 2 22>;
        };

        right_enter {
            bindings = <&kp ENTER>;
            key-positions = <8 17 26>;
        };

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <0 1>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <3 13>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <2 12>;
        };

        hold_space {
            bindings = <&kp SPACE>;
            key-positions = <31 23>;
        };

        caps_word {
            bindings = <&caps_word>;
            key-positions = <14 15>;
        };

        toggle_nav {
            bindings = <&tog 2>;
            key-positions = <11 2 13>;
            layers = <0 2>;
            require-prior-idle-ms = <350>;
        };

        jsdoc {
            bindings = <&jsdoc>;
            key-positions = <29 28>;
        };

        caps_lock {
            bindings = <&kp CAPSLOCK>;
            key-positions = <13 12 16 17>;
        };

        screen_shot {
            bindings = <&kp LS(LG(S))>;
            key-positions = <0 11>;
        };

        reset {
            bindings = <&sys_reset>;
            key-positions = <0 31 9 33>;
        };

        bootloader {
            bindings = <&bootloader>;
            key-positions = <4 14 5 15>;
        };
    };

    behaviors {
        hm: HOMEROW_MODS {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <0>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
        };

        hs: HOMEROW_SHIFT {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_SHIFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <100>;
            flavor = "balanced";
            require-prior-idle-ms = <100>;
        };

        esc: esc {
            compatible = "zmk,behavior-tap-dance";
            label = "ESC";
            #binding-cells = <0>;
            bindings = <&kp Q>, <&kp ESC>;

            tapping-term-ms = <200>;
        };

        tab: tab {
            compatible = "zmk,behavior-tap-dance";
            label = "TAB";
            #binding-cells = <0>;
            bindings = <&mt LCTRL ENTER>, <&kp TAB>;

            tapping-term-ms = <250>;
        };
    };

    macros {
        jsdoc: jsdoc {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp FSLH &kp STAR &kp STAR &kp SPACE>;
            label = "JSDOC";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer_0 {
            bindings = <
&kp Q             &kp W           &kp E        &kp R        &kp T                          &kp Y  &kp U            &kp I        &kp O       &kp P
&hm LEFT_GUI A    &hm LEFT_ALT S  &hm LCTRL D  &hs LSHFT F  &kp G                          &kp H  &hs RSHFT J      &hm RCTRL K  &hm RALT L  &hm RMETA SQT
&mt LEFT_SHIFT Z  &kp X           &kp C        &kp V        &kp B                          &kp N  &kp M            &kp COMMA    &kp PERIOD  &mt RIGHT_SHIFT SLASH
                                               &lt 2 HASH          &lt 1 SPACE    &lt 3 A         &lt 2 BACKSPACE
            >;
        };

        Layer__1 {
            bindings = <
&kp N1       &kp N2           &kp N3           &kp N4         &kp N5                        &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp UNDER  &kp PLUS   &kp TILDE
&kp N6       &kp N7           &kp N8           &kp N9         &kp N0                        &kp LBKT              &kp RIGHT_BRACKET      &kp MINUS  &kp EQUAL  &kp GRAVE
&kp KP_PLUS  &kp KP_SUBTRACT  &kp KP_MULTIPLY  &kp KP_DIVIDE  &kp KP_DOT                    &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp SEMI   &kp COLON  &kp BSLH
                                               &trans                     &trans    &trans                        &kp TAB
            >;
        };

        Layer__2 {
            bindings = <
&bootloader  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans
&trans       &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans
&trans       &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans
                             &trans          &trans    &trans          &trans
            >;
        };

        Layer__3 {
            bindings = <
&sys_reset  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3                    &bt BT_SEL 4  &trans  &trans  &trans  &out OUT_TOG
&bt BT_CLR  &trans        &trans        &trans        &trans                          &trans        &trans  &trans  &trans  &trans
&trans      &trans        &trans        &trans        &trans                          &trans        &trans  &trans  &trans  &trans
                                        &trans                      &trans    &trans                &trans
            >;
        };
    };
};
